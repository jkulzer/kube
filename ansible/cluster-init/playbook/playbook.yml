---
- hosts: localhost
  gather_facts: no
- hosts: all
  vars:
    ansible_user: johannes
    ansible_password: johannes
  gather_facts: false
  become: true
  tasks:
    - name: Symlink resolv.conf
      shell: ln -rsf /run/systemd/resolve/stub-resolv.conf /etc/resolv.conf
    - name: Install htop, kubernetes tooling, git, bind9 for DNS debugging, rsync, VMWare Tools and open-iscsi (for longhorn)
      shell: yes | pacman -S htop kustomize helm git bind open-vm-tools rsync open-iscsi
    - name: Enable and start VMWare Tools
      shell: systemctl enable vmtoolsd --now
    - name: Create variable from command
      shell: ip route get 9.9.9.9 | awk '{print $7}' | cut -d '.' -f4
      register: command_output
    - set_fact:
        last_ip_digit: "{{ command_output.stdout }}"
    - name: "Configure hostname"
      ansible.builtin.hostname:
        name: node-{{ last_ip_digit }}
- hosts: primary
  vars:
    ansible_user: johannes
    ansible_password: johannes
    k3s_version: v1.26.0+k3s1
  gather_facts: false
  become: true
  tasks:
    - name: K3S install
      shell: curl -sfL https://get.k3s.io | sh -s - server
      environment:
        K3S_RESOLV_CONF: /run/systemd/resolve/resolv.conf
        INSTALL_K3S_EXEC: --disable traefik --disable servicelb --disable local-storage --flannel-backend=none --disable-network-policy --cluster-cidr=10.42.0.0/16
        INSTALL_K3S_VERSION: "{{ k3s_version }}"
    - name: Remove directory
      file:
        path: kube
        state: absent
    - name: Clone Kube git repo
      shell: git clone https://github.com/jkulzer/kube
    - name: Initialize CNI
      shell: kustomize build kube/cluster/config/cilium --enable-helm | kubectl apply -f -
    - name: Initialize Prometheus CRDs
      shell: kustomize build kube/cluster/config/prometheus-crds --enable-helm | kubectl apply --server-side=true --force-conflicts -f -
    - name: Initialize Prometheus without CRDs
      shell: kustomize build kube/cluster/config/prometheus --enable-helm | kubectl apply --server-side=true --force-conflicts -f -
    - name: Initialize ArgoCD
      shell: kustomize build kube/cluster/config/argocd --enable-helm | kubectl apply -f -
    - name: Create ArgoCD Repository
      shell: kubectl apply -f kube/cluster/repository.yaml
    - name: Create ArgoCD App of Apps
      shell: kubectl apply -f kube/cluster/main.yaml
    - name: Get K3S token
      command: "cat /var/lib/rancher/k3s/server/token"
      register: command_output
    - set_fact:
        k3s_server_token: "{{ command_output.stdout }}"
    - name: Create a k3s.service override directory
      file:
        owner: root
        group: root
        mode: 0755
        path: /etc/systemd/system/k3s.service.d
        state: directory
    - name: Set up k3s.service override
      ini_file:
        dest: /etc/systemd/system/k3s.service.d/cpu-override.conf
        owner: root
        group: root
        mode: 0644
        section: [Service]
        option: CPUQuota
        value: 50%
    - name: daemon-reload systemd
      systemd:
        daemon_reload: true
    - name: Restart k3s.service
      systemd:
        name: k3s.service
        state: restarted
- hosts: other-nodes
  vars:
    ansible_user: johannes
    ansible_password: johannes
    k3s_version: v1.26.0+k3s1
  gather_facts: false
  become: true
  tasks:
    - name: Get K3S server token
      set_fact:
        k3s_server_token: "{{ hostvars['node1.nodes.kube.home']['k3s_server_token'] }}"
    - name: K3S install
      shell: curl -sfL https://get.k3s.io | sh -s - --server https://node1.nodes.kube.home:6443
      environment:
        K3S_RESOLV_CONF: /run/systemd/resolve/resolv.conf
        K3S_TOKEN: "{{ k3s_server_token }}"
        INSTALL_K3S_EXEC: --disable traefik --disable servicelb --disable local-storage --flannel-backend=none --disable-network-policy --cluster-cidr=10.42.0.0/16
        INSTALL_K3S_VERSION: "{{ k3s_version }}"
