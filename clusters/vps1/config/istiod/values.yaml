## Discovery Settings
pilot:
  autoscaleEnabled: false
  replicaCount: 1

  # Resources for a small pilot install
  resources:
    requests:
      cpu: 20m
      memory: 200Mi


sidecarInjectorWebhook:
  # This enables injection of sidecar in all namespaces,
  # with the exception of namespaces with "istio-injection:disabled" annotation
  # Only one environment should have this enabled.
  enableNamespacesByDefault: true

  rewriteAppHTTPProbe: true

telemetry:
  enabled: true
  v2:
    # For Null VM case now.
    # This also enables metadata exchange.
    enabled: true
    metadataExchange:
      # Indicates whether to enable WebAssembly runtime for metadata exchange filter.
      wasmEnabled: false
    # Indicate if prometheus stats filter is enabled or not
    prometheus:
      enabled: true
      # Indicates whether to enable WebAssembly runtime for stats filter.
      wasmEnabled: false
      # overrides stats EnvoyFilter configuration.
    # stackdriver filter settings.
    stackdriver:
      enabled: false
      logging: false
      monitoring: false
      topology: false # deprecated. setting this to true will have no effect, as this option is no longer supported.
      disableOutbound: false
      #  configOverride parts give you the ability to override the low level configuration params passed to envoy filter.

global:
  # The podDisruptionBudget APIVersion has some problems on k3s, therefore it will get disabled
  # It is a small cluster and the podDisruptionBudget is overkill for it
  defaultPodDisruptionBudget:
    enabled: false
  # Used to locate istiod.
  istioNamespace: istio-system
  # A minimal set of requested resources to applied to all deployments so that
  # Horizontal Pod Autoscaler will be able to function (if set).
  # Each component can overwrite these default values by adding its own resources
  # block in the relevant section below and setting the desired resources values.
  defaultResources:
    requests:
      cpu: 10m
    #   memory: 128Mi

  # Default hub for Istio images.
  # Releases are published to docker hub under 'istio' project.
  # Dev builds from prow are on gcr.io
  hub: docker.io/istio


  # Comma-separated minimum per-scope logging level of messages to output, in the form of <scope>:<level>,<scope>:<level>
  # The control plane has different scopes depending on component, but can configure default log level across all components
  # If empty, default scope and level will be used as configured in code
  logging:
    level: "default:info"


  proxy:
    image: proxyv2

    # This controls the 'policy' in the sidecar injector.
    autoInject: enabled
    resources:
      requests:
        cpu: 5m

meshConfig:
  extensionProviders:
  - name: 'authelia'
    envoyExtAuthzHttp:
      service: 'authelia.authelia.svc.cluster.local'
      port: 80
      pathPrefix: '/api/verify/'
      includeRequestHeadersInCheck:
        - accept
        - cookie
        - proxy-authorization
      headersToUpstreamOnAllow:
        - 'authorization'
        - 'proxy-authorization'
        - 'remote-*'
        - 'authelia-*'
      includeAdditionalHeadersInCheck:
        X-Authelia-URL: 'https://auth.kube.home/'
        X-Forwarded-Method: '%REQ(:METHOD)%'
        X-Forwarded-Proto: '%REQ(:SCHEME)%'
        X-Forwarded-Host: '%REQ(:AUTHORITY)%'
        X-Forwarded-URI: '%REQ(:PATH)%'
        X-Forwarded-For: '%DOWNSTREAM_REMOTE_ADDRESS_WITHOUT_PORT%'
      headersToDownstreamOnDeny:
        - set-cookie
      headersToDownstreamOnAllow:
        - set-cookie
