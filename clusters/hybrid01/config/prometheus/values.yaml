namespaceOverride: "prometheus"

alertmanager:
  enabled: true
  apiVersion: v2
  config:
    global:
      resolve_timeout: 5m
    route:
      group_by: ['alertname']
      group_wait: 20s
      group_interval: 5m
      repeat_interval: 3h 
      receiver: discord_webhook
      routes:
      - receiver: 'null'
        matchers:
          - alertname =~ "InfoInhibitor|Watchdog"
    receivers:
    - name: 'null'
    - name: 'discord_webhook'
      webhook_configs:
      - url: 'http://alertmanager-discord.alertmanager-discord.svc.cluster.local:9094'
    templates:
    - '/etc/alertmanager/config/*.tmpl'
  ingress:
    enabled: false
  service:
    type: ClusterIP
  serviceMonitor:
    selfMonitor: true
  alertmanagerSpec:
    resources:
      requests:
        cpu: 15m
        memory: 40Mi
      limits:
        cpu: 20m
        memory: 50Mi

grafana:
  enabled: false

kubeApiServer:
  enabled: true
  tlsConfig:
    serverName: kubernetes
    insecureSkipVerify: false

kubelet:
  enabled: true
  serviceMonitor:
    resource: true

kubeControllerManager:
  enabled: false

coreDns:
  enabled: false
  service:
    port: 9153
    targetPort: 9153

kubeEtcd:
  enabled: true

kubeScheduler:
  enabled: false

kubeStateMetrics:
  enabled: true

kube-state-metrics:
  namespaceOverride: "prometheus"
  releaseLabel: true
  prometheus:
    monitor:
      enabled: true
  selfMonitor:
    enabled: true

nodeExporter:
  enabled: true

kubeProxy:
  enabled: false

prometheus-node-exporter:
  namespaceOverride: "prometheus"
  extraArgs:
    - --collector.filesystem.mount-points-exclude=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)
    - --collector.filesystem.fs-types-exclude=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$
  service:
    portName: http-metrics
  prometheus:
    monitor:
      enabled: true

prometheusOperator:
  enabled: true
  service:
    type: ClusterIP
  kubeletService:
    enabled: true

prometheus:
  enabled: true
  service:
    type: ClusterIP
  ingress:
    enabled: false
  serviceMonitor:
    selfMonitor: true
  prometheusSpec:
    ruleSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelectorNilUsesHelmValues: false
    probeSelectorNilUsesHelmValues: false
    serviceMonitorSelector: {}
    serviceMonitorNamespaceSelector: {}
    retention: 1d
    retentionSize: 15GiB
    replicas: 1
    resources:
      requests:
        memory: 400Mi
        cpu: 50m
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: ceph-block
          accessModes: 
            - "ReadWriteOnce"
          resources:
            requests:
                storage: 16Gi
