---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: firefly
  namespace: firefly
  labels:
    app: firefly
spec:
  replicas: 1
  selector:
    matchLabels:
      app: firefly
  template:
    metadata:
      labels:
        app: firefly
    spec:
      containers:
        - name: firefly
          image: fireflyiii/core:version-6.1.16
          env:
          - name: DB_CONNECTION
            value: pgsql
          - name: PGSQL_SCHEMA
            value: public
          - name: DB_DATABASE
            valueFrom:
              secretKeyRef:
                name: firefly-pg-app
                key: dbname
          - name: DB_HOST
            value: firefly-pg-rw
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: firefly-pg-app
                key: password
          - name: DB_USERNAME
            valueFrom:
              secretKeyRef:
                name: firefly-pg-app
                key: username
          - name: DB_USERNAME
            valueFrom:
              secretKeyRef:
                name: firefly-pg-app
                key: username
          - name: DB_PORT
            valueFrom:
              secretKeyRef:
                name: firefly-pg-app
                key: port
          - name: SITE_OWNER
            value: mail@jkulzer.dev
          - name: APP_KEY
            valueFrom:
              secretKeyRef: 
                name: firefly-app-key
                key: key
          - name: TZ
            value: Europe/Berlin
          - name: TRUSTED_PROXIES
            value: "**"
          - name: AUTHENTICATION_GUARD
            value: remote_user_guard
          - name: AUTHENTICATION_GUARD_HEADER
            value: remote-user
          - name: AUTHENTICATION_GUARD_EMAIL
            value: remote-email
          - name: APP_URL
            value: https://budget.jkulzer.dev
          - name: STATIC_CRON_TOKEN
            valueFrom:
              secretKeyRef: 
                name: firefly-cron-token
                key: token
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cron
  namespace: firefly
  labels:
    app: cron
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cron
  template:
    metadata:
      labels:
        app: cron
    spec:
      containers:
        - name: cron
          image: alpine:3.20.0
          command: sh -c "echo \"0 3 * * * wget -qO- http://firefly:8080/api/v1/cron/$CRON_TOKEN\" | crontab - && crond -f -L /dev/stdout"
          env:
          - name: APP_KEY
            valueFrom:
              secretKeyRef: 
                name: firefly-cron-token
                key: token
