---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: immich-machine-learning
  namespace: immich
  labels:
    app: machine-learning
spec:
  revisionHistoryLimit: 3
  replicas: 1
  selector:
    matchLabels:
      app: machine-learning
  template:
    metadata:
      labels:
        app: machine-learning
    spec:
      containers:
        - name: immich-machine-learning
          image: ghcr.io/immich-app/immich-machine-learning:v1.112.1 
          env:
            - name: DB_DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: immich-pg-app
                  key: dbname
            - name: DB_HOSTNAME
              value: immich-pg-rw
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: immich-pg-app
                  key: password
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: immich-pg-app
                  key: username
            - name: IMMICH_MACHINE_LEARNING_URL
              value: http://immich-machine-learning:3003
            - name: REDIS_HOSTNAME
              value: dragonfly-immich
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: immich-dragonfly-secret
                  key: password
            - name: TRANSFORMERS_CACHE
              value: /cache
          ports:
            - name: http
              containerPort: 3003
              protocol: TCP
          volumeMounts:
            - name: cache
              mountPath: /cache
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: http
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: http
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
      volumes:
        - name: cache
          emptyDir:
            {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: immich-microservices
  namespace: immich
  labels:
    app: microservices
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: microservices
  template:
    metadata:
      labels:
        app: microservices
    spec:
      containers:
        - name: immich-microservices
          image: ghcr.io/immich-app/immich-server:v1.112.0
          imagePullPolicy: IfNotPresent
          command:
            - "/bin/sh"
          args:
            - ./start-microservices.sh
          env:
            - name: DB_DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: immich-pg-app
                  key: dbname
            - name: DB_HOSTNAME
              value: immich-pg-rw
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: immich-pg-app
                  key: password
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: immich-pg-app
                  key: username
            - name: IMMICH_MACHINE_LEARNING_URL
              value: http://immich-machine-learning:3003
            - name: REDIS_HOSTNAME
              value: dragonfly-immich
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: immich-dragonfly-secret
                  key: password
            - name: IMMICH_CONFIG_FILE
              value: /config/client-secret
          volumeMounts:
            - name: library
              mountPath: /usr/src/app/upload
            - name: config
              mountPath: /config
      volumes:
        - name: library
          persistentVolumeClaim:
            claimName: immich-media
        - name: config
          secret:
            secretName: immich-oidc-secret
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: immich-server
  namespace: immich
  labels:
    app: server
spec:
  revisionHistoryLimit: 3
  replicas: 1
  selector:
    matchLabels:
      app: server
  template:
    metadata:
      labels:
        app: server
    spec:
      containers:
        - name: immich-server
          image: ghcr.io/immich-app/immich-server:v1.112.0
          imagePullPolicy: IfNotPresent
          command:
            - "/bin/sh"
          args:
            - ./start-server.sh
          env:
            - name: DB_DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: immich-pg-app
                  key: dbname
            - name: DB_HOSTNAME
              value: immich-pg-rw
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: immich-pg-app
                  key: password
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: immich-pg-app
                  key: username
            - name: IMMICH_MACHINE_LEARNING_URL
              value: http://immich-machine-learning:3003
            - name: REDIS_HOSTNAME
              value: dragonfly-immich
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: immich-dragonfly-secret
                  key: password
            - name: IMMICH_CONFIG_FILE
              value: /config/client-secret
          ports:
            - name: http
              containerPort: 3001
              protocol: TCP
          volumeMounts:
            - name: library
              mountPath: /usr/src/app/upload
            - name: config
              mountPath: /config
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/server-info/ping
              port: http
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/server-info/ping
              port: http
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
        - name: immich-init
          image: python:3.12
          command:
            - "python"
          args:
            - /script/immich-initialize-admin.py
          env:
            - name: IMMICH_URL
              value: http://immich-server-internal.immich.svc.cluster.local:3001
            - name: SERVER_PORT
              value: "8080"
            - name: EMAIL
              value: mail@jkulzer.dev
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: immich-admin-password
                  key: password
          ports:
            - name: http-init
              containerPort: 8080
              protocol: TCP
          volumeMounts:
            - name: init-script
              mountPath: /script
          readinessProbe:
            failureThreshold: 300
            httpGet:
              path: /
              port: http-init
            initialDelaySeconds: 0
            periodSeconds: 1
            timeoutSeconds: 1
      volumes:
        - name: library
          persistentVolumeClaim:
            claimName: immich-media
        - name: config
          secret:
            secretName: immich-oidc-secret
        - name: init-script
          configMap: 
            name: init-script
