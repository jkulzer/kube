---
# Source: metallb/templates/psp.yaml
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: metallb-controller
  labels:
    app.kubernetes.io/name: metallb
    app.kubernetes.io/instance: metallb
spec:
  privileged: false
  # Host namespaces
  hostPID: false
  hostIPC: false
  hostNetwork: false
  # Volumes and file systems
  volumes:
  - configMap
  - secret
  - emptyDir
  allowedHostPaths: []
  readOnlyRootFilesystem: true
  # Users and groups
  runAsUser:
    rule: MustRunAsNonRoot
  supplementalGroups:
    rule: MustRunAs
    ranges:
    - min: 1
      max: 65535
  fsGroup:
    rule: MustRunAs
    ranges:
    - min: 1
      max: 65535
  # Privilege Escalation
  allowPrivilegeEscalation: false
  defaultAllowPrivilegeEscalation: false
  # Capabilities
  allowedCapabilities: []
  defaultAddCapabilities: []
  requiredDropCapabilities:
  - ALL
  # SELinux
  seLinux:
    rule: RunAsAny
---
# Source: metallb/templates/psp.yaml
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: metallb-speaker
  labels:
    app.kubernetes.io/name: metallb
    app.kubernetes.io/instance: metallb
spec:
  privileged: true
  # Host namespaces
  hostPID: false
  hostIPC: false
  hostNetwork: true
  hostPorts:
  - min: 7472
    max: 7472
  - max: 7946
    min: 7946
  # Volumes and file systems
  volumes:
  - configMap
  - secret
  - emptyDir
  allowedHostPaths: []
  readOnlyRootFilesystem: true
  # Users and groups
  runAsUser:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  fsGroup:
    rule: RunAsAny
  # Privilege Escalation
  allowPrivilegeEscalation: false
  defaultAllowPrivilegeEscalation: false
  # Capabilities
  allowedCapabilities:
  - NET_RAW
  defaultAddCapabilities: []
  requiredDropCapabilities:
  - ALL
  # SELinux
  seLinux:
    rule: RunAsAny
---
# Source: metallb/templates/service-accounts.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: metallb-controller
  labels:
    app.kubernetes.io/name: metallb
    app.kubernetes.io/instance: metallb
    app.kubernetes.io/component: controller
---
# Source: metallb/templates/service-accounts.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: metallb-speaker
  labels:
    app.kubernetes.io/name: metallb
    app.kubernetes.io/instance: metallb
    app.kubernetes.io/component: speaker
---
# Source: metallb/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: metallb
  labels:
    app.kubernetes.io/name: metallb
    app.kubernetes.io/instance: metallb
data:
  config: |
    address-pools:
    - addresses:
      - 192.168.69.2 - 192.168.69.32
      name: default
      protocol: layer2
---
# Source: metallb/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: metallb:controller
  labels:
    app.kubernetes.io/name: metallb
    app.kubernetes.io/instance: metallb
rules:
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["services/status"]
  verbs: ["update"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: ["policy"]
  resources: ["podsecuritypolicies"]
  resourceNames: ["metallb-controller"]
  verbs: ["use"]
---
# Source: metallb/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: metallb:speaker
  labels:
    app.kubernetes.io/name: metallb
    app.kubernetes.io/instance: metallb
rules:
- apiGroups: [""]
  resources: ["services", "endpoints", "nodes"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["discovery.k8s.io"]
  resources: ["endpointslices"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: ["policy"]
  resources: ["podsecuritypolicies"]
  resourceNames: ["metallb-speaker"]
  verbs: ["use"]
---
# Source: metallb/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: metallb:controller
  labels:
    app.kubernetes.io/name: metallb
    app.kubernetes.io/instance: metallb
subjects:
- kind: ServiceAccount
  name: metallb-controller
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: metallb:controller
---
# Source: metallb/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: metallb:speaker
  labels:
    app.kubernetes.io/name: metallb
    app.kubernetes.io/instance: metallb
subjects:
- kind: ServiceAccount
  name: metallb-speaker
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: metallb:speaker
---
# Source: metallb/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: metallb-config-watcher
  labels:
    app.kubernetes.io/name: metallb
    app.kubernetes.io/instance: metallb
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch"]
---
# Source: metallb/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: metallb-pod-lister
  labels:
    app.kubernetes.io/name: metallb
    app.kubernetes.io/instance: metallb
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list"]
---
# Source: metallb/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: metallb-controller
  labels:
    app.kubernetes.io/name: metallb
    app.kubernetes.io/instance: metallb
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["create"]
- apiGroups: [""]
  resources: ["secrets"]
  resourceNames: ["metallb-memberlist"]
  verbs: ["list"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  resourceNames: ["metallb-controller"]
  verbs: ["get"]
---
# Source: metallb/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: metallb-config-watcher
  labels:
    app.kubernetes.io/name: metallb
    app.kubernetes.io/instance: metallb
subjects:
- kind: ServiceAccount
  name: metallb-controller
- kind: ServiceAccount
  name: metallb-speaker
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: metallb-config-watcher
---
# Source: metallb/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: metallb-pod-lister
  labels:
    app.kubernetes.io/name: metallb
    app.kubernetes.io/instance: metallb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: metallb-pod-lister
subjects:
- kind: ServiceAccount
  name: metallb-speaker
---
# Source: metallb/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: metallb-controller
  labels:
    app.kubernetes.io/name: metallb
    app.kubernetes.io/instance: metallb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: metallb-controller
subjects:
- kind: ServiceAccount
  name: metallb-controller
---
# Source: metallb/templates/speaker.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: metallb-speaker
  labels:
    app.kubernetes.io/name: metallb
    app.kubernetes.io/instance: metallb
    app.kubernetes.io/component: speaker
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: metallb
      app.kubernetes.io/instance: metallb
      app.kubernetes.io/component: speaker
  template:
    metadata:
      labels:
        app.kubernetes.io/name: metallb
        app.kubernetes.io/instance: metallb
        app.kubernetes.io/component: speaker
    spec:
      serviceAccountName: metallb-speaker
      terminationGracePeriodSeconds: 0
      hostNetwork: true
      containers:
      - name: speaker
        image: quay.io/metallb/speaker:main
        args:
        - --port=7472
        - --config=metallb
        - --log-level=info
        env:
        - name: METALLB_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: METALLB_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: METALLB_ML_BIND_ADDR
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: METALLB_ML_LABELS
          value: "app.kubernetes.io/name=metallb,app.kubernetes.io/component=speaker"
        - name: METALLB_ML_BIND_PORT
          value: "7946"
        - name: METALLB_ML_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: metallb-memberlist
              key: secretkey
        ports:
        - name: monitoring
          containerPort: 7472
        - name: memberlist-tcp
          containerPort: 7946
          protocol: TCP
        - name: memberlist-udp
          containerPort: 7946
          protocol: UDP
        livenessProbe:
          httpGet:
            path: /metrics
            port: monitoring
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /metrics
            port: monitoring
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
            add:
            - NET_RAW
      nodeSelector:
        "kubernetes.io/os": linux
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
        operator: Exists
---
# Source: metallb/templates/controller.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metallb-controller
  labels:
    app.kubernetes.io/name: metallb
    app.kubernetes.io/instance: metallb
    app.kubernetes.io/component: controller
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: metallb
      app.kubernetes.io/instance: metallb
      app.kubernetes.io/component: controller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: metallb
        app.kubernetes.io/instance: metallb
        app.kubernetes.io/component: controller
    spec:
      serviceAccountName: metallb-controller
      terminationGracePeriodSeconds: 0
      securityContext:
        fsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      containers:
      - name: controller
        image: quay.io/metallb/controller:main
        args:
        - --port=7472
        - --config=metallb
        - --log-level=info
        env:
        - name: METALLB_ML_SECRET_NAME
          value: metallb-memberlist
        - name: METALLB_DEPLOYMENT
          value: metallb-controller
        ports:
        - name: monitoring
          containerPort: 7472
        livenessProbe:
          httpGet:
            path: /metrics
            port: monitoring
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /metrics
            port: monitoring
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      nodeSelector:
        "kubernetes.io/os": linux

