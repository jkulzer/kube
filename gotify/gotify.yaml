---
apiVersion: v1
kind: Namespace
metadata:
  name: gotify
  labels:
    app: gotify
---
kind: "PersistentVolumeClaim"
apiVersion: "v1"
metadata:
  name: gotify
  namespace: gotify
  annotations:
    volume.alpha.kubernetes.io/storage-class: "generic"
  labels:
    app: gotify
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "1Gi"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: gotify
  name: gotify
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gotify
  template:
    metadata:
      labels:
        app: gotify
      annotations:
        gotify.enable: "true"
    spec:
      containers:
        - name: gotify
          image: gotify/server:latest
          imagePullPolicy: Always
          args: ["serve"]
          env:
            - name: TZ
              value: "Europe/Berlin"
          volumeMounts:
            - mountPath: "/data"
              name: "data"
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
      restartPolicy: Always
      volumes:
        - name: "data"
          persistentVolumeClaim:
            claimName: gotify
---
apiVersion: v1
kind: Service
metadata:
  name: gotify
  namespace: gotify
  labels:
    app: gotify
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
  selector:
    app: gotify
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gotify
  namespace: gotify
  annotations:
    kubernetes.io/ingress.class: "nginx"
  labels:
    app: gotify
spec:
  tls:
  - hosts:
    - push.kube.home
  rules:
  - host: push.kube.home
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: gotify
            port:
              name: http
