---
apiVersion: v1
kind: Namespace
metadata:
  name: grafana
  labels:
    app: grafana
    namespace: grafana
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana
  namespace: grafana
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: grafana
  labels:
    app: grafana
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  namespace: grafana
data:
  grafana.ini: |
    [server]
    root_url = https://grafana.kube.home
    domain = https://grafana.kube.home
    [auth.generic_oauth]
    name = Keycloak
    icon = signin
    enabled = true
    client_id = kube-oidc
    scopes = openid
    auth_url = https://keycloak.kube.home/realms/kube/protocol/openid-connect/auth
    token_url = https://keycloak.kube.home/realms/kube/protocol/openid-connect/token
    api_url = https://keycloak.kube.home/realms/kube/protocol/openid-connect/userinfo
    allowed_domains = kube.home
    tls_client_ca = /config/kube-cert/kube-home.crt
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: grafana
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      annotations:
        vault.security.banzaicloud.io/vault-addr: "http://vault.vault.svc.cluster.local:8200"
        vault.security.banzaicloud.io/vault-role: "grafana"
        vault.security.banzaicloud.io/vault-path: "kubernetes"
      labels:
        app: grafana
    spec:
      serviceAccountName: grafana
      securityContext:
        fsGroup: 472
        supplementalGroups:
          - 0
      containers:
        - name: grafana
          image: grafana/grafana:9.0.3
          imagePullPolicy: IfNotPresent
          args:
            - --config=/config/grafana/grafana.ini
          env:
          - name: GRAFANA_CLIENT_SECRET
            value: "vault:kv/data/kube/keycloak-oidc#client-secret"
          env:
          - name: GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET
            value: "vault:kv/data/kube/keycloak-oidc#client-secret"
          ports:
            - containerPort: 3000
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /robots.txt
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 3000
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 250m
              memory: 750Mi
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-data
            - mountPath: /config/grafana
              name: grafana-config
            - mountPath: /config/kube-cert
              name: kube-cert
      volumes:
        - name: grafana-data
          persistentVolumeClaim:
            claimName: grafana
        - name: grafana-config
          configMap:
            name: grafana-config
        - name: kube-cert
          configMap:
            name: wildcard-kube-home-distribution
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: grafana
  labels:
    app: grafana
spec:
  type: ClusterIP
  ports:
    - port: 3000
      protocol: TCP
      targetPort: http
      name: http
  selector:
    app: grafana
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana
  namespace: grafana
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
  - host: grafana.kube.home
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: grafana
            port:
              name: http
