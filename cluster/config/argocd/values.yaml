global:
  revisionHistoryLimit: 1
  additionalLabels:
    app: argo-cd

controller:
  resources:
    requests:
      cpu: 100m
      memory: 100M
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true

dex:
  enabled: false

redis:
  enabled: true

server:
  resources:
    requests:
      cpu: 15m
      memory: 100M
  extraArgs: 
    - --insecure
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
  config:
    resource.customizations: |
      argoproj.io/Application:
        health.lua: |
          hs = {}
          hs.status = "Progressing"
          hs.message = ""
          if obj.status ~= nil then
            if obj.status.health ~= nil then
              hs.status = obj.status.health.status
              if obj.status.health.message ~= nil then
                hs.message = obj.status.health.message
              end
            end
          end
          return hs
    statusbadge.enabled: "true"
    kustomize.buildOptions: --enable-helm
    reposerver.allow.oob.symlinks: "true"
    resource.exclusions: |
      - apiGroups:
          - cilium.io
        kinds:
          - CiliumIdentity
        clusters:
          - "*"
  ingress:
    enabled: false
  volumeMounts:
    - name: trusted-bundle-distribution
      mountPath: /etc/ssl/certs
  volumes:
    - name: trusted-bundle-distribution
      configMap:
        name: trusted-bundle-distribution

configs:
  cm:
    create: true
    url: https://argocd.kube.home
    oidc.config: |
      name: Authelia
      issuer: https://auth.kube.home
      clientID: argocd
      clientSecret: $argocd-oidc-secret:oidc.authelia.clientSecret
      cliClientID: argocd-cli
      requestedScopes:
        - openid
        - profile
        - email
        - groups

repoServer:
  resources:
    requests:
      cpu: 15m
      memory: 100M
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true

applicationSet:
  enabled: false

notifications:
  enabled: false
