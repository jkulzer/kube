---
apiVersion: v1
kind: Secret
metadata:
  name: authelia-jwt-token
  annotations:
    secret-generator.v1.mittwald.de/autogenerate: JWT_TOKEN
---
apiVersion: v1
kind: Secret
metadata:
  name: authelia-session-encryption-key
  annotations:
    secret-generator.v1.mittwald.de/autogenerate: SESSION_ENCRYPTION_KEY
---
apiVersion: v1
kind: Secret
metadata:
  name: authelia-storage-encryption-key
  annotations:
    secret-generator.v1.mittwald.de/autogenerate: STORAGE_ENCRYPTION_KEY
---
apiVersion: v1
kind: Secret
metadata:
  name: authelia-hmac-secret
  annotations:
    secret-generator.v1.mittwald.de/autogenerate: HMAC_SECRET
---
apiVersion: v1
kind: Service
metadata:
  name: authelia
  labels: 
    app.kubernetes.io/name: authelia
spec:
  type: ClusterIP
  sessionAffinity: None
  selector:
    app.kubernetes.io/name: authelia
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: http
    - name: metrics
      protocol: TCP
      port: 9959
      targetPort: metrics
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: authelia
  labels: 
    app.kubernetes.io/name: authelia
spec:
  selector:
    matchLabels: 
      app.kubernetes.io/name: authelia
  revisionHistoryLimit: 1
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate: 
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      labels: 
        app.kubernetes.io/name: authelia
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      affinity: 
        nodeAffinity: {}
        podAffinity: {}
        podAntiAffinity: {}
      enableServiceLinks: false
      containers:
      - name: authelia
        # image: ghcr.io/authelia/authelia:4.37.5
        # This is needed for templating, and the 4.37 version doesn't have the feature yet
        # A switch to the stable branch will be done when 4.38 releases
        image: ghcr.io/authelia/authelia:v4.38.0-beta2
        imagePullPolicy: IfNotPresent
        command: ["authelia"]
        args:
        - --config=/configuration.yaml
        resources: 
          limits:
            memory: 125Mi
          requests:
            cpu: "0.25"
            memory: 50Mi
        env:
          # This enables the injection of env variables in the config
          # https://github.com/authelia/authelia/blob/master/docs/content/en/configuration/methods/files.md
        - name: X_AUTHELIA_CONFIG_FILTERS
          value: "expand-env,template"
        - name: AUTHELIA_SERVER_DISABLE_HEALTHCHECK
          value: "true"
        - name: AUTHELIA_JWT_SECRET_FILE
          value: /secrets/jwt-token/JWT_TOKEN
        - name: AUTHELIA_SESSION_SECRET_FILE
          value: /secrets/session-encryption-key/SESSION_ENCRYPTION_KEY
        - name: AUTHELIA_STORAGE_ENCRYPTION_KEY_FILE
          value: /secrets/storage-encryption-key/STORAGE_ENCRYPTION_KEY
        - name: AUTHELIA_STORAGE_ENCRYPTION_KEY_FILE
          value: /secrets/storage-encryption-key/STORAGE_ENCRYPTION_KEY
        - name: AUTHELIA_AUTHENTICATION_BACKEND_LDAP_PASSWORD_FILE
          value: /secrets/ldap-password/LLDAP_LDAP_USER_PASS
        - name: AUTHELIA_IDENTITY_PROVIDERS_OIDC_HMAC_SECRET_FILE
          value: /secrets/hmac-secret/HMAC_SECRET
        - name: TZ
          value: Europe/Berlin
        startupProbe:
          failureThreshold: 6
          httpGet:
            path: /api/health
            port: http
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /api/health
            port: http
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /api/health
            port: http
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        ports:
        - name: http
          containerPort: 9091
          protocol: TCP
        - name: metrics
          containerPort: 9959
          protocol: TCP
        volumeMounts:
        - mountPath: /configuration.yaml
          name: config
          readOnly: true
          subPath: configuration.yaml
        - mountPath: /secrets/storage-encryption-key
          name: authelia-storage-encryption-key
          readOnly: true
        - mountPath: /secrets/session-encryption-key
          name: authelia-session-encryption-key
          readOnly: true
        - mountPath: /secrets/jwt-token
          name: authelia-jwt-token
          readOnly: true
        - mountPath: /secrets/ldap-password
          name: ldap-admin-user-pass
          readOnly: true
        - mountPath: /secrets/hmac-secret
          name: authelia-hmac-secret
          readOnly: true
        - mountPath: /secrets/grafana-oidc-secret
          name: grafana-oidc-secret
          readOnly: true
        - mountPath: /secrets/authelia-oidc-issuer
          name: authelia-oidc-issuer
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: authelia
          items:
          - key: configuration
            path: configuration.yaml
      - name: authelia-jwt-token
        secret:
          secretName: authelia-jwt-token
          items:
          - key: JWT_TOKEN
            path: JWT_TOKEN
      - name: authelia-session-encryption-key
        secret:
          secretName: authelia-session-encryption-key
          items:
          - key: SESSION_ENCRYPTION_KEY
            path: SESSION_ENCRYPTION_KEY
      - name: authelia-storage-encryption-key
        secret:
          secretName: authelia-storage-encryption-key
          items:
          - key: STORAGE_ENCRYPTION_KEY
            path: STORAGE_ENCRYPTION_KEY
      - name: ldap-admin-user-pass
        secret:
          secretName: ldap-admin-user-pass
          items:
          - key: LLDAP_LDAP_USER_PASS
            path: LLDAP_LDAP_USER_PASS
      - name: authelia-hmac-secret
        secret:
          secretName: authelia-hmac-secret
          items:
          - key: HMAC_SECRET
            path: HMAC_SECRET
      - name: grafana-oidc-secret
        secret:
            secretName: grafana-oidc-secret
            items:
              - key: GRAFANA_OAUTH_HASHED_KEY
                path: GRAFANA_OAUTH_HASHED_KEY
      - name: authelia-oidc-issuer
        secret:
            secretName: authelia-oidc-issuer
            items:
              - key: tls.key
                path: tls.key
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: authelia
  labels: 
    app.kubernetes.io/name: authelia
spec:
  endpoints:
    - path: /metrics
      port: metrics
  namespaceSelector:
    matchNames:
      - authelia
  selector:
    matchLabels: 
      app.kubernetes.io/name: authelia
