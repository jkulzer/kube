alertmanager:
  enabled: true
  ingress:
    enabled: true
    ingressClassName: "nginx"
    hosts:
      - alertmanager.kube.home
    annotations:
      nginx.ingress.kubernetes.io/auth-response-headers: "Authorization"
      nginx.ingress.kubernetes.io/auth-signin: "https://oauth.kube.home/oauth2/start?rd=https://$host$uri"
      nginx.ingress.kubernetes.io/auth-url: "https://oauth.kube.home/oauth2/auth"

kubeStateMetrics:
  enabled: true

nodeExporter:
  enabled: true
  hostNetwork: true

server:
  enabled: true
  global:
    scrape_interval: 1m
    scrape_timeout: 10s
    evaluation_interval: 1m
  retention: "7d"
  ingress:
    enabled: true
    ingressClassName: "nginx"
    hosts:
      - prometheus.kube.home
    annotations:
      nginx.ingress.kubernetes.io/auth-response-headers: Authorization
      nginx.ingress.kubernetes.io/auth-signin: https://oauth.kube.home/oauth2/start?rd=https://$host$uri
      nginx.ingress.kubernetes.io/auth-url: https://oauth.kube.home/oauth2/auth

pushgateway:
  enabled: true

alertmanagerFiles:
  alertmanager.yml:
    global: {}
      # slack_api_url: ''

    receivers:
      - name: default-receiver
        # slack_configs:
        #  - channel: '@you'
        #    send_resolved: true

    route:
      group_wait: 10s
      group_interval: 5m
      receiver: default-receiver
      repeat_interval: 3h

ruleFiles: {}

extraScrapeConfigs:
  # - job_name: 'prometheus-blackbox-exporter'
  #   metrics_path: /probe
  #   params:
  #     module: [http_2xx]
  #   static_configs:
  #     - targets:
  #       - https://example.com
  #   relabel_configs:
  #     - source_labels: [__address__]
  #       target_label: __param_target
  #     - source_labels: [__param_target]
  #       target_label: instance
  #     - target_label: __address__
  #       replacement: prometheus-blackbox-exporter:9115

alertRelabelConfigs:
  # alert_relabel_configs:
  # - source_labels: [dc]
  #   regex: (.+)\d+
  #   target_label: dc
  #

serverFiles:
  alerting_rules.yml:
    groups:
      - name: Crashing
        rules:
          - alert: PodFrequentlyRestarting
            expr: increase(kube_pod_container_status_restarts_total[1h]) > 5
            for: 10m
            labels:
              severity: warning
            message: Pod {{`{{$labels.namespace}}`}}/{{`{{$labels.pod}}`}} was restarted {{`{{$value}}`}}

