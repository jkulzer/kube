apiVersion: "vault.banzaicloud.com/v1alpha1"
kind: "Vault"
metadata:
  name: "vault"
  namespace: vault
spec:
  size: 1
  image: hashicorp/vault:1.14
  # Specify the ServiceAccount where the Vault Pod and the Bank-Vaults configurer/unsealer is running
  serviceAccount: vault

  # Specify the Service's type where the Vault Service is exposed
  # Please note that some Ingress controllers like https://github.com/kubernetes/ingress-gce
  # forces you to expose your Service on a NodePort
  serviceType: ClusterIP

  # Describe where you would like to store the Vault unseal keys and root token.
  unsealConfig:
    options:
      # The preFlightChecks flag enables unseal and root token storage tests
      # This is true by default
      preFlightChecks: true
      # The storeRootToken flag enables storing of root token in chosen storage
      # This is true by default
      storeRootToken: true
    kubernetes:
      secretName: "vault-unseal-keys"
      secretNamespace: "vault"

  # A YAML representation of a final vault config file.
  # See https://www.vaultproject.io/docs/configuration/ for more information.
  config:
    storage:
      file:
        path: "/vault/data"
    listener:
      tcp:
        address: "0.0.0.0:8200"
        tls_disable: true
    telemetry:
      statsd_address: localhost:9125
    ui: true

    auth:
      - type: kubernetes
        roles:
          # Allow every pod in the default namespace to use the secret kv store
          - name: default
            bound_service_account_names: ["default", "vault-secrets-webhook", "vault"]
            bound_service_account_namespaces: ["default", "vswh"]
            policies: ["allow_secrets", "allow_pki"]
            ttl: 1h

  vaultEnvsConfig:
    - name: VAULT_LOG_LEVEL
      value: debug
    - name: VAULT_STORAGE_FILE
      value: "/vault/data"

  # Marks presence of Istio, which influences things like port namings
  istioEnabled: true

  resources:
    bankVaults:
      requests:
        cpu: 10m
    vault:
      requests:
        cpu: 30m

  volumes:
    - name: vault-pvc
      persistentVolumeClaim:
        claimName: vault
    - name: main-certificate
      configMap:
        name: kube-root-ca.crt
  volumeMounts:
    - name: vault-pvc
      mountPath: /vault/data
    - name: main-certificate
      mountPath: /etc/ssl/certs/my-cert.pem
      subPath: ca.crt
      readOnly: false
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vault
  namespace: vault
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
