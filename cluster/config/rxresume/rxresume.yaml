---
apiVersion: v1
kind: Namespace
metadata:
  name: rxresume
  annotations:
    app: rxresume
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: rxresume
  namespace: rxresume
---
kind: "PersistentVolumeClaim"
apiVersion: "v1"
metadata:
  name: rxresume-postgres
  namespace: rxresume
  labels:
    app: rxresume
spec:
  accessModes:
    - "ReadWriteMany"
  resources:
    requests:
      storage: "5Gi"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rxresume-postgres
  namespace: rxresume
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rxresume
      component: postgres
  template:
    metadata:
      annotations:
        vault.security.banzaicloud.io/vault-addr: "http://vault.vault.svc.cluster.local:8200"
        vault.security.banzaicloud.io/vault-role: "rxresume"
        vault.security.banzaicloud.io/vault-path: "kubernetes"
      labels:
        app: rxresume
        component: postgres
    spec:
      serviceAccountName: rxresume
      containers:
        - name: postgres
          image: postgres:alpine
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - mountPath: /var/lib/postgres
              name: rxresume-postgres
          env:
            - name: POSTGRES_USER
              value: rxresume
            - name: POSTGRES_PASSWORD
              value: "vault:kv/data/kube/rxresume/#postgres-password"
          ports:
            - name: sql
              containerPort: 5432
              protocol: TCP
      restartPolicy: Always
      volumes:
      - name: "rxresume-postgres"
        persistentVolumeClaim:
          claimName: rxresume-postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rxresume-server
  namespace: rxresume
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rxresume
      component: server
  template:
    metadata:
      annotations:
        vault.security.banzaicloud.io/vault-addr: "http://vault.vault.svc.cluster.local:8200"
        vault.security.banzaicloud.io/vault-role: "rxresume"
        vault.security.banzaicloud.io/vault-path: "kubernetes"
      labels:
        app: rxresume
        component: server
    spec:
      serviceAccountName: rxresume
      containers:
        - name: rxresume-server
          image: amruthpillai/reactive-resume:server-v3.6.8
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - name: public-key
              mountPath: "/etc/ssl/certs/kube-cert.crt"
              subPath: "kube-home.crt"
              readOnly: true
              name: public-key
          env:
            - name: POSTGRES_USER
              value: rxresume
            - name: POSTGRES_PASSWORD
              value: "vault:kv/data/kube/rxresume/#postgres-password"
            - name: POSTGRES_DB
              value: rxresume
            - name: POSTGRES_HOST
              value: "rxresume-postgres.rxresume.svc.cluster.local"
            - name: SECRET_KEY
              value: "vault:kv/data/kube/rxresume/#secret-key"
            - name: JWT_SECRET
              value: "vault:kv/data/kube/rxresume/#jwt-secret"
            - name: PUBLIC_URL
              value: "http://rxresume-client.rxresume.svc.cluster.local:3000"
            - name: PUBLIC_SERVER_URL
              value: "https://resume-api.kube.home"
            - name: JWT_EXPIRY_TIME
              value: "604800"
            - name: POSTGRES_PORT
              value: "5432"
          ports:
            - name: http
              containerPort: 3100
              protocol: TCP
      restartPolicy: Always
      volumes:
        - name: "public-key"
          configMap:
            name: wildcard-kube-home-distribution
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rxresume-client
  namespace: rxresume
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rxresume
      component: client
  template:
    metadata:
      annotations:
        vault.security.banzaicloud.io/vault-addr: "http://vault.vault.svc.cluster.local:8200"
        vault.security.banzaicloud.io/vault-role: "rxresume"
        vault.security.banzaicloud.io/vault-path: "kubernetes"
      labels:
        app: rxresume
        component: client
    spec:
      serviceAccountName: rxresume
      containers:
        - name: rxresume-client
          image: amruthpillai/reactive-resume:client-v3.6.8
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - name: public-key
              mountPath: "/etc/ssl/certs/kube-cert.crt"
              subPath: "kube-home.crt"
              readOnly: true
              name: public-key
          env:
            - name: PUBLIC_URL
              value: "https://resume.kube.home"
            - name: PUBLIC_SERVER_URL
              value: "https://resume-api.kube.home"
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
      restartPolicy: Always
      volumes:
        - name: "public-key"
          configMap:
            name: wildcard-kube-home-distribution
---
apiVersion: v1
kind: Service
metadata:
  name: rxresume-postgres
  namespace: rxresume
  labels:
    app: rxresume
spec:
  type: ClusterIP
  ports:
    - port: 5432
      name: sql
  selector:
    app: rxresume
---
apiVersion: v1
kind: Service
metadata:
  name: rxresume-server
  namespace: rxresume
  labels:
    app: rxresume
spec:
  type: ClusterIP
  ports:
    - port: 3100
      name: http
  selector:
    app: rxresume
---
apiVersion: v1
kind: Service
metadata:
  name: rxresume-client
  namespace: rxresume
  labels:
    app: rxresume
spec:
  type: ClusterIP
  ports:
    - port: 3000
      name: http
  selector:
    app: rxresume
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rxresume
  namespace: rxresume
  annotations:
    kubernetes.io/ingress.class: "nginx"
    hajimari.io/enable: "true"
    hajimari.io/icon: file-account
    hajimari.io/appName: RxResume
    hajimari.io/group: Dev
  labels:
    app: rxresume
spec:
  tls:
  - hosts:
    - resume.kube.home
  rules:
  - host: resume.kube.home
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: rxresume-client
            port:
              name: http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rxresume-server
  namespace: rxresume
  annotations:
    kubernetes.io/ingress.class: "nginx"
  labels:
    app: rxresume
spec:
  tls:
  - hosts:
    - resume-api.kube.home
  rules:
  - host: resume-api.kube.home
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: rxresume-server
            port:
              number: 3100
