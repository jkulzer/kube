---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: drone
  namespace: drone
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: drone
  name: drone
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
- apiGroups:
  - ""
  resources:
  - pods
  - pods/log
  verbs:
  - get
  - create
  - delete
  - list
  - watch
  - update
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: drone
  namespace: drone
subjects:
- kind: ServiceAccount
  name: drone
  namespace: drone
roleRef:
  kind: Role
  name: drone
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: drone-kubernetes-runner
  labels:
    app.kubernetes.io/name: drone-kubernetes-runner
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: drone-kubernetes-runner
  template:
    metadata:
      annotations:
        vault.security.banzaicloud.io/vault-addr: "http://vault.vault.svc.cluster.local:8200"
        vault.security.banzaicloud.io/vault-role: "drone"
        vault.security.banzaicloud.io/vault-path: "kubernetes"
      labels:
        app.kubernetes.io/name: drone-kubernetes-runner
    spec:
      serviceAccountName: drone
      containers:
      - name: drone-runner
        image: drone/drone-runner-kube:latest
        volumeMounts:
          - name: public-key
            mountPath: "/etc/ssl/certs/kube-cert.crt"
            subPath: kube-cert.crt
            readOnly: true
            name: public-key
        ports:
        - containerPort: 3000
        env:
        - name: DRONE_RPC_HOST
          value: drone-server-ui.drone.svc.cluster.local
        - name: DRONE_RPC_PROTO
          value: http
        - name: DRONE_RPC_SECRET
          value: "vault:kv/data/kube/drone#drone-rpc-secret"
        - name: DRONE_NAMESPACE_DEFAULT
          value: drone
        - name: DRONE_RUNNER_VOLUMES
          value: /etc/ssl/certs/kube-cert.crt:/etc/ssl/certs/kube-cert.crt
      volumes:
      - name: "public-key"
        configMap:
          name: wildcard-kube-home-distribution
