---
apiVersion: v1
kind: Namespace
metadata:
  name: oauth-proxy
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: oauth2-proxy

  labels:
    app: oauth2-proxy    
---
apiVersion: v1
kind: Service
metadata:
  name: oauth-proxy
  labels:
    app: oauth2-proxy    
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
    - port: 44180
      protocol: TCP
      targetPort: metrics
      name: metrics
  selector:    
    app: oauth2-proxy
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oauth-proxy
  labels:
    app: oauth2-proxy    
spec:
  revisionHistoryLimit: 1
  replicas: 1
  selector:
    matchLabels:      
      app: oauth2-proxy
  template:
    metadata:
      labels:
        app: oauth2-proxy        
      annotations:
        vault.security.banzaicloud.io/vault-addr: "http://vault.vault.svc.cluster.local:8200"
        vault.security.banzaicloud.io/vault-role: "oauth2-proxy"
        vault.security.banzaicloud.io/vault-path: "kubernetes"
    spec:
      serviceAccountName: oauth2-proxy
      containers:
      - name: oauth2-proxy
        image: "quay.io/oauth2-proxy/oauth2-proxy:v7.3.0"
        imagePullPolicy: Always
        args:
          - --http-address=0.0.0.0:4180
          - --metrics-address=0.0.0.0:44180
          - --email-domain=kube.home
          - --provider=oidc
          - --cookie-domain=.kube.home
          - --redirect-url=https://oauth.kube.home/oauth2/callback
          - --oidc-issuer-url=https://keycloak.kube.home/realms/kube
          - --client-id=kube-oidc
          - --scope=openid
          - --silence-ping-logging
          - --provider-ca-file=/certs/kube-home.crt
          - --whitelist-domain=.kube.home
          - --reverse-proxy=true
          - --upstream="static://202"
        env:
        - name: OAUTH2_PROXY_CLIENT_SECRET
          value: "vault:kv/data/kube/keycloak-oidc#client-secret"
        - name: OAUTH2_PROXY_COOKIE_SECRET
          value: "vault:kv/data/kube/keycloak-oidc#cookie-secret"
        ports:
          - containerPort: 4180
            name: http
            protocol: TCP
          - containerPort: 44180
            protocol: TCP
            name: metrics
        livenessProbe:
          httpGet:
            path: /ping
            port: http
            scheme: HTTP
          initialDelaySeconds: 0
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /ping
            port: http
            scheme: HTTP
          initialDelaySeconds: 0
          timeoutSeconds: 1
          successThreshold: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /certs
          name: kube-cert
      volumes:
      - name: kube-cert
        configMap:
          name: wildcard-kube-home-distribution
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: oauth-proxy-ingress
  annotations:
    app: oauth2-proxy
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-buffer-size: 8K
spec:
  rules:
  - host: oauth.kube.home
    http:
      paths:
      - backend:
          service:
            name: oauth-proxy
            port:
              name: http
        path: /
        pathType: Prefix
