# cni:
# install: true

cluster:
  name: default

rollOutCiliumPods: true

image:
  repository: quay.io/cilium/cilium
  tag: v1.11.1
  pullPolicy: IfNotPresent


cni:
  # -- Install the CNI configuration and binary files into the filesystem.
  install: true
  chainingMode: none
  exclusive: true
  customConf: false
  confPath: /etc/cni/net.d
  binPath: /opt/cni/bin
  configMapKey: cni-config
  confFileMountPath: /tmp/cni-configuration
  hostConfDirMountPath: /host/etc/cni/net.d

healthChecking: true

identityAllocationMode: "crd"
healthPort: 9876

containerRuntime:
  integration: containerd
  socketPath: /run/k3s/containerd/containerd.sock

#encryption:
  # -- Enable transparent network encryption.
  # enabled: false
  # -- Encryption method. Can be either ipsec or wireguard.
  # type: wireguard
  # wireguard:
    # -- Enables the fallback to the user-space implementation.
    # userspaceFallback: true




    # hubble:
    # enabled: true
    # relay:
    # enabled: true
    # nodeSelector: 
    # kubernetes.io/hostname: mokou
    # ui:
    # enabled: true
    # ingress:
    # enabled: true
    # annotations:
    # kubernetes.io/ingress.class: nginx
    # hosts:
    # - hubble.kube.home

# -- Configure prometheus metrics on the configured port at /metrics
# prometheus:
# enabled: true
# port: 9090
# serviceMonitor:
    # -- Enable service monitors.
    # This requires the prometheus CRDs to be available (see https://github.com/prometheus-operator/prometheus-operator/blob/master/example/prometheus-operator-crd/monitoring.coreos.com_servicemonitors.yaml)
    # enabled: false


      # preflight:
  # enabled: false

    # l7Proxy: false
ipv4:
  # -- Enable IPv4 support.
  enabled: true
    # ipam:
    # operator:
    # clusterPoolIPv4PodCIDRList: 10.42.0.0/16




    # localRedirectPolicy: true

kubeProxyReplacement: "strict"
kubeProxyReplacementHealthzBindAddr: 0.0.0.0:10256

k8sServicePort: 6443
  # k8sServiceHost: sakuya.kube.home

bpf:
  masquerade: true
